/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlycoffee;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.Mongo;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author HUYNH
 */
public class ChangePass extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     *
     * @param NameEmp
     */

    public ChangePass(String NameEmp) {
        initComponents();
        this.setLocationRelativeTo(null);
        ImageIcon img = new ImageIcon("Image//change_pass.png");
        this.setIconImage(img.getImage());
        lbNameEmp.setText(NameEmp);
        lbNameEmp.setVisible(false);
        lbpasscu.setVisible(false);
        lbpassmoi.setVisible(false);
        lbconfirm.setVisible(false);
        btnOK.setEnabled(false);
        txtpassMoi.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtpassCu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtpassMoi = new javax.swing.JTextField();
        txtCOnfirm = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lbNameEmp = new javax.swing.JLabel();
        lbpasscu = new javax.swing.JLabel();
        lbpassmoi = new javax.swing.JLabel();
        lbconfirm = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Đổi mật khẩu");

        jLabel1.setText("Mật khẩu cũ:");

        txtpassCu.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtpassCuCaretUpdate(evt);
            }
        });
        txtpassCu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpassCuKeyPressed(evt);
            }
        });

        jLabel2.setText("Mật khẩu mới:");

        jLabel3.setText("Nhập lại mật khẩu:");

        txtpassMoi.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtpassMoiCaretUpdate(evt);
            }
        });
        txtpassMoi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpassMoiKeyPressed(evt);
            }
        });

        txtCOnfirm.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtCOnfirmCaretUpdate(evt);
            }
        });
        txtCOnfirm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCOnfirmKeyPressed(evt);
            }
        });

        btnOK.setText("Đồng Ý");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lbNameEmp.setText("jLabel4");

        lbpasscu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbpasscu.setText("jLabel4");

        lbpassmoi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbpassmoi.setText("jLabel5");

        lbconfirm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbconfirm.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbpasscu)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtpassMoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtpassCu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lbpassmoi)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbconfirm)
                                    .addComponent(txtCOnfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbNameEmp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK)
                        .addGap(94, 94, 94)
                        .addComponent(btnExit)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtpassCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(lbpasscu)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtpassMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(lbpassmoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCOnfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbconfirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExit)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnOK)
                        .addComponent(lbNameEmp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
////
    private void txtpassCuCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtpassCuCaretUpdate

        if (txtpassCu.getText().trim().equals("")) {

        } else {
            try {
                Mongo mongo = new Mongo();
                DB db = mongo.getDB("QlyCofee");
                DBCollection em = db.getCollection("Employee");
                DBCursor cursor = em.find(new BasicDBObject().append("NameEmp", lbNameEmp.getText()).append("password", txtpassCu.getText().trim()));
                if (cursor.hasNext()) {
                    lbpasscu.setText("Đúng mật khẩu.");
                    lbpasscu.setForeground(Color.BLUE);
                    lbpasscu.setVisible(true);
                    txtpassMoi.setVisible(true);
                } else {
                    lbpasscu.setText("Sai mật khẩu.");
                    lbpasscu.setForeground(Color.red);
                    lbpasscu.setVisible(true);
                    
                }
            } catch (UnknownHostException ex) {
                Logger.getLogger(ChangePass.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_txtpassCuCaretUpdate

    private void txtpassCuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpassCuKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtpassMoi.grabFocus();
        }
    }//GEN-LAST:event_txtpassCuKeyPressed

    private void txtpassMoiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpassMoiKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCOnfirm.grabFocus();
        }
    }//GEN-LAST:event_txtpassMoiKeyPressed

    private void txtCOnfirmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCOnfirmKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnOK.doClick();
        }
    }//GEN-LAST:event_txtCOnfirmKeyPressed

    private void txtpassMoiCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtpassMoiCaretUpdate
        // TODO add your handling code here:
        if (txtpassMoi.getText().trim().equals("")) {

        } else if (txtpassMoi.getText().trim().equals(txtpassCu.getText().trim())) {
            lbpassmoi.setText("Mật khẩu mới không được trùng mật khẩu cũ.");
            lbpassmoi.setForeground(Color.red);
            lbpassmoi.setVisible(true);

        } else {
            char x;
            for (int i = 0; i < txtpassMoi.getText().length(); i++) {
                x = txtpassMoi.getText().charAt(i);
                if (x == ' ') {
                    lbpassmoi.setText("Mật khẩu không thể chứa khoảng trắng.");
                    lbpassmoi.setForeground(Color.red);
                    lbpassmoi.setVisible(true);
                    return;
                }
            }
            if (txtpassMoi.getText().length() < 6) {
                lbpassmoi.setText("Độ dài mật khẩu phải từ khoảng 6-18 ký tự.");
                lbpassmoi.setForeground(Color.red);
                lbpassmoi.setVisible(true);
            } else {
                lbpassmoi.setText("Mật khẩu hợp lệ.");
                lbpassmoi.setForeground(Color.blue);
                lbpassmoi.setVisible(true);
            }
        }
    }//GEN-LAST:event_txtpassMoiCaretUpdate

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        try {
            Mongo mongo = new Mongo();
            DB db = mongo.getDB("QlyCofee");
            DBCollection employee = db.getCollection("Employee");
            DBCursor cursor = employee.find(new BasicDBObject().append("NameEmp", lbNameEmp.getText()));
            BasicDBObject query = new BasicDBObject();
            query.put("password", cursor.next().get("password")); // (1)
            BasicDBObject newDocument = new BasicDBObject();
            newDocument.put("password", txtpassMoi.getText().trim()); // (2)
            BasicDBObject updateObject = new BasicDBObject();
            updateObject.put("$set", newDocument); // (3)
            employee.update(query, updateObject);
            JOptionPane.showMessageDialog(rootPane, "Đổi mật khẩu thành công");
            this.setVisible(false);

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Đổi mật  khẩu thất bại.");
        } catch (UnknownHostException ex) {
            Logger.getLogger(ChangePass.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void txtCOnfirmCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtCOnfirmCaretUpdate
        // TODO add your handling code here:
        if (txtCOnfirm.getText().trim().equals("")) {

        } else {
            if (!txtCOnfirm.getText().trim().equals(txtpassMoi.getText().trim())) {
                lbconfirm.setText("Mật khẩu không hợp lệ.");
                lbconfirm.setForeground(Color.red);
                lbconfirm.setVisible(true);
            } else {
                lbconfirm.setText("Hợp lệ.");
                lbconfirm.setForeground(Color.blue);
                lbconfirm.setVisible(true);
                btnOK.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txtCOnfirmCaretUpdate

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbNameEmp;
    private javax.swing.JLabel lbconfirm;
    private javax.swing.JLabel lbpasscu;
    private javax.swing.JLabel lbpassmoi;
    private javax.swing.JTextField txtCOnfirm;
    private javax.swing.JTextField txtpassCu;
    private javax.swing.JTextField txtpassMoi;
    // End of variables declaration//GEN-END:variables
}
